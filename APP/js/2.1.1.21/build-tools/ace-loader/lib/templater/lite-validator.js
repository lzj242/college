const isType=require("../lite/lite-utils"),rulePath=process.env.RULE_PATH,smartvisionTag={camera:{events:["error"]},canvas:{},video:{events:["prepared","start","pause","finish","error","seeking","seeked","timeupdate"],attrs:{autoplay:{enum:["false","true"]},controls:{enum:["true","false"]},muted:{enum:["false","true"]},src:{checkPath:!0}}}},litewearableTag={div:{},stack:{},qrcode:{atomic:!0,selfClosing:!0,uevents:["click","longpress","swipe"],attrs:{value:{required:!0},type:{enum:["rect","circle"]}}},list:{events:["scrollend"],children:["list-item"]},"list-item":{excludeRoot:!0,parents:["list"]},swiper:{events:["change"],attrs:{index:{checkFunc:"number"},loop:{enum:["true","false"]},duration:{checkFunc:"number"},vertical:{enum:["false","true"]}}},tabs:{events:["change"],children:["tab-content","tab-bar"]},"tab-bar":{parents:["tabs"],children:["text"],attrs:{mode:{enum:["fixed"]}}},"tab-content":{parents:["tabs"],children:["div","stack"]},"image-animator":{atomic:!0,selfClosing:!0,events:["stop"],attrs:{images:{required:!0},iteration:{},reverse:{enum:["false","true"]},fixedsize:{enum:["true","false"]},duration:{required:!0},fillmode:{enum:["none","forwards"]}}},image:{alias:["img"],atomic:!0,selfClosing:!0,attrs:{src:{checkPath:!0}}},progress:{atomic:!0,selfClosing:!0,attrs:{type:{enum:["horizontal","arc"]},percent:{checkFunc:"number"}}},text:{atomic:!0,textContent:!0,attrs:{type:{enum:["text","html"]},value:{}}},marquee:{atomic:!0,attrs:{scrollamount:{def:6,checkFunc:"number"}}},"analog-clock":{attrs:{hour:{checkFunc:"number"},min:{checkFunc:"number"},sec:{checkFunc:"number"}}},"clock-hand":{parents:["analog-clock"],attrs:{type:{enum:["hour","min","sec"]},src:{checkPath:!0}}},chart:{atomic:!0,selfClosing:!0,attrs:{type:{enum:["line","bar"]},datasets:{},options:{}}},input:{atomic:!0,selfClosing:!0,events:["change"],attrs:{checked:{enum:["false","true"]},type:{enum:["button","checkbox","radio"]},name:{},value:{}}},slider:{atomic:!0,selfClosing:!0,events:["change"],attrs:{min:{def:0,checkFunc:"number"},max:{def:100,checkFunc:"number"},value:{def:0,checkFunc:"number"}}},switch:{events:["change"],atomic:!0,selfClosing:!0,attrs:{checked:{enum:["false","true"]}}},"picker-view":{atomic:!0,selfClosing:!0,uevents:["change"],attrs:{type:{enum:["text","time"]},range:{},selected:{}}}},liteCommonTag={events:["click","longpress","touchstart","touchmove","touchcancel","touchend","key","swipe"],attrs:{id:{},style:{},class:{},ref:{},if:{excludeRoot:!0,def:"true"},elif:{def:"true"},else:{excludeRoot:!0},for:{excludeRoot:!0},tid:{},show:{excludeRoot:!0,def:"true"}}};function select(e){return tag={liteWearable:litewearableTag,smartVision:{...litewearableTag,...smartvisionTag}},tag[e]}let liteNativeTag=select(process.env.DEVICE_TYPE);function getKeys(){const e=[],t=Object.keys(liteNativeTag);for(let s=0;s<t.length;s++){const n=t[s];e.push(n)}return e.push("attrs"),e}function isExtends(e){if("recommended"==e.extends){const t=getKeys();merge(liteNativeTag,e.rules,t)}else liteNativeTag=e.rules}function merge(e,t,s){const n=Object.keys(t);for(let a=0;a<n.length;a++){const r=n[a],i=t[r];let c=e[r];null==c||s.includes(r)?isType.isObject(i)?(c=isType.isObject(c)?c:{},e[r]=merge(c,i,s)):isType.isNull(i)||isType.isUndefined(i)||(e[r]=i):(console.error("[31mError in .literc.js: \n"+`Attribute '${r}' already exists and cannot be modified[39m`),process.exit(1))}return e}!function(){if(rulePath){isExtends(require(rulePath))}}(),module.exports={liteNativeTag:liteNativeTag,liteCommonTag:liteCommonTag};