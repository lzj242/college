var parser=require("@babel/parser"),traverse=require("@babel/traverse").default,generate=require("@babel/generator").default;function parseExpression(e,r){const n=new RegExp("^(NaN\\b|isNaN\\b|isFinite\\b|decodeURI\\b|decodeURIComponent\\b|Math\\b|Date\\b|this\\b|true\\b|false\\b|\n    encodeURI\\b|encodeURIComponent\\b|parseInt\\b|parseFloat\\b|null\\b|undefined\\b|Infinity\\b)","g"),t=new RegExp("^(var\\b|while\\b|with\\b|yield\\b|enum\\b|await\\b|implements\\b|package\\b|for\\b|function\\b|if\\b|import\\b|\n    protected\\b|static\\b|interface\\b|private\\b|public\\b|break\\b|case\\b|class\\b|catch\\b|const\\b|continue\\b|debugger\\b|\n    default\\b|delete\\b|do\\b|else\\b|export\\b|extends\\b|finally\\b|in\\b|instanceof\\b|let\\b|return\\b|super\\b|switch\\b|throw\\b|try\\b)","g");try{let a=r?parser.parse("("+e+")"):parser.parse(e);return traverse(a,{enter(e){if(e.parent&&"Identifier"===e.node.type){let r=!1;(r=!!(["ConditionalExpression","BinaryExpression"].includes(e.parent.type)||"CallExpression"===e.parent.type&&e.parent.callee===e.node)||("ObjectProperty"===e.parent.type&&!e.parent.computed&&e.parent.value===e.node||addPrefix(e.node,e.parent)))&&!n.test(e.node.name)&&(e.node.name="this."+e.node.name)}}}),generate(a,{compact:!0}).code.replace(";","").replace(/\"/g,"'").replace(/\n/g,"")}catch(n){throw r?t.test(e)?Error("An event parsing error occurred. Do not use the reserved:"+e).message:Error("An event parsing error occurred:"+e).message:t.test(e)?Error("A data binding parsing error occurred. Do not use the reserved:"+e).message:Error("A data binding parsing error occurred:"+e).message}}function addPrefix(e,r){const n=["expression","argument","expressions","elements","left","right"],t=["object","property","id","key"];let a=Object.keys(r);for(let t=0;t<n.length;t++)if(a.includes(n[t])&&(r[n[t]]===e||["expressions","elements"].includes(n[t])&&r[n[t]].includes(e)))return!0;for(let n=0;n<t.length;n++)if(a.includes(t[n])){if(r.computed&&r[t[n]]===e)return!0;if("Property"===r.type&&r.key.range[0]===r.value.range[0]&&r.key.range[1]===r.value.range[1])e.name=e.name+":this."+e.name;else if(r.object===e)return!0}return!1}exports.parseExpression=parseExpression;