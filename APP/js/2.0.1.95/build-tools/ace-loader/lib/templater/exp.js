var expression=require("./lib/expression"),text=require("./lib/text");function transExpr(expContent,toFunc){let result,trimContent=expContent.toString().trim();if(isExpression(trimContent)){let expressionList=[],tokens=text.parseText(trimContent),len=tokens.length;tokens.forEach(function(e){if(e.tag){let s=expression.parseExpression(e.value);1!==len&&(s="("+s+")"),expressionList.push(s)}else expressionList.push("'"+e.value+"'")}),expressionList=expressionList.join(" + "),!1!==toFunc&&(expressionList=eval("(function () {return "+expressionList+"})")),result=expressionList}else result=trimContent;return result}function transExprForList(e){let s=(e=e.toString().trim()).match(/{{{(.+?)}}}|{{(.+?)}}/g);if(s&&s.length){let r=e.replace(/{{{(.+?)}}}|{{(.+?)}}/g,"%s").split(/\s+/),t=0,n=[];for(let e=0;e<r.length;e++){let i=r[e];if(i.indexOf("%s")>=0){let e=i;for(;e.indexOf("%s")>=0;)e=e.replace("%s",s[t++]);let r=text.parseText(e),o=[];r&&(r.forEach(function(e){e.tag?o.push(expression.parseExpression(e.value)):o.push("'"+e.value+"'")}),n.push(o.join("+")))}else n.push("'"+i+"'")}return"(function () {return ["+n.join(", ")+"]})"}return e}function isExpression(e){return/{{{(.+?)}}}|{{(.+?)}}/.test(e)}function includeExpression(e){return/{{{(.+?)}}}|{{(.+?)}}/g.test(e)}function removeExpressionPre(e){const s=/\{\{\{?|\}\}\}?/g;return includeExpression(e)&&(e=e.replace(s,"")),e}transExpr.isExpr=isExpression,transExpr.containExpr=includeExpression,transExpr.removeAllExprFix=removeExpressionPre,transExpr.transExprForList=transExprForList,transExpr.parseExpression=expression.parseExpression,module.exports=transExpr;