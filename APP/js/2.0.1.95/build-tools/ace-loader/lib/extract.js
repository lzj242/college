"use strict";var _loaderUtils=_interopRequireDefault(require("loader-utils")),_parser=require("./parser"),_util=require("./util");function _interopRequireDefault(r){return r&&r.__esModule?r:{default:r}}function _slicedToArray(r,e){return _arrayWithHoles(r)||_iterableToArrayLimit(r,e)||_unsupportedIterableToArray(r,e)||_nonIterableRest()}function _nonIterableRest(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,e){if(r){if("string"==typeof r)return _arrayLikeToArray(r,e);var t=Object.prototype.toString.call(r).slice(8,-1);return"Object"===t&&r.constructor&&(t=r.constructor.name),"Map"===t||"Set"===t?Array.from(r):"Arguments"===t||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t)?_arrayLikeToArray(r,e):void 0}}function _arrayLikeToArray(r,e){(null==e||e>r.length)&&(e=r.length);for(var t=0,n=new Array(e);t<e;t++)n[t]=r[t];return n}function _iterableToArrayLimit(r,e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(r)){var t=[],n=!0,a=!1,i=void 0;try{for(var o,l=r[Symbol.iterator]();!(n=(o=l.next()).done)&&(t.push(o.value),!e||t.length!==e);n=!0);}catch(r){a=!0,i=r}finally{try{n||null==l.return||l.return()}finally{if(a)throw i}}return t}}function _arrayWithHoles(r){if(Array.isArray(r))return r}module.exports=function(r,e){var t=this;this.cacheable&&this.cacheable();var n=this.async(),a=_loaderUtils.default.getOptions(this),i=a.type,o=a.index;null!=o&&o.match(/^\d+$/)&&(o=parseInt(o)),(0,_parser.extractBlocks)(r,i).then(function(n){null!=o&&(n=n[o]);var a,l=n.content.trim();if(t.sourceMap&&("scripts"===i||"elements"===i)){var u,c=n.line;e&&(u=(0,_util.consumeMap)(t,r,e),r=u.sourcesContent.join(""));var s=(0,_util.splitSourceLine)(l).map(function(r,e){var t=(e+=1)+c,n=e;return u&&(t=u.mapping["line-".concat(t,"-column-0")].line),{original:{line:t,column:0},generated:{line:n,column:0}}});a=(0,_util.generateMap)(t,r,s)}return[l,a]}).then(function(r){var t=_slicedToArray(r,2),a=t[0],i=t[1];n(null,a,i&&i.toJSON()||e)}).catch(function(r){n(r,"")})};