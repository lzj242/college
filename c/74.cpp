#include<stdio.h>

struct rationalNumber{
????int?fenzi;?//?分子
????int?fenmu;?//?分母
};

//?函数rnMean：计算n个有理数的平均数
//?参数：a-存放有理数的数组,n-有理数的个数
//?返回值：n个有理数的平均数
rationalNumber?rnMean(rationalNumber?a[],?int?n);

int?main()
{
????char?c;
????rationalNumber?a[100],z;
????int?n,?i;
????scanf("%d",?&n);?????//?输入有理数个数
????//?输入n个有理数
????for(i?=?0;?i?<?n;?i++)
????????scanf("%d%c%d",?&a[i].fenzi,?&c,?&a[i].fenmu);
????z?=?rnMean(a,n);?????//?计算有理数平均数
????//?输出平均数
????if(z.fenmu?==?1)
????????printf("%d\n",?z.fenzi);
????else
????????if(z.fenzi==0)
????????printf("0");
????????else
????????printf("%d/%d\n",?z.fenzi,?z.fenmu);
????return?0;
}

//?请在此添加代码，实现函数rnMean
/**********?Begin?*********/
rationalNumber?rnMean(rationalNumber?a[],?int?n)
{
????rationalNumber?z;
????int?i,x=1,y=0;
????for(i=0;i<n;i++)
????x=a[i].fenmu*x;
????for(i=0;i<n;i++)
????a[i].fenzi=a[i].fenzi*x/a[i].fenmu;
????for(i=0;i<n;i++)
????y=y+a[i].fenzi;
????z.fenzi=y;
????z.fenmu=x;
????int?flag=1,k;
????if(z.fenzi==0)
????????return?z;
????if(z.fenzi<0)
????{
????????z.fenzi=-z.fenzi;
????????flag=-1;
????}
????k=z.fenmu>z.fenzi?z.fenzi:z.fenmu;
????for(i=k;i>1;i--)
????{
????????if(z.fenmu%i==0&&z.fenzi%i==0)
????????{
????????????z.fenzi=z.fenzi/i;
????????????z.fenmu=z.fenmu/i*n;
????????????break;
????????}
????}
????z.fenzi=z.fenzi*flag;
????return?z;

}
/**********?End?**********/

